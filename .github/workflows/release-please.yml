on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Run release-please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          release-type: rust

  build-release:
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
          - linux musl x64
          - linux musl aarch64
          - macos x64
          - macos aarch64
        include:
          - build: linux musl x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: linux musl aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - build: macos x64
            os: macos-latest
            target: x86_64-apple-darwin
          - build: macos aarch64
            os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y --no-install-recommends musl-tools

      - name: Install dependencies (macOS only)
        if: matrix.os == 'macos-latest'
        run: brew install coreutils

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Strip binary (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: strip target/${{ matrix.target }}/release/fswatcher

      - name: Create checksum
        run: |
          cd target/${{ matrix.target }}/release
          sha256sum fswatcher > fswatcher-${{ matrix.target }}.sha256sum

      - name: Tar release
        run: |
          cd target/${{ matrix.target }}/release
          tar -czvf fswatcher-${{ matrix.target }}.tar.gz fswatcher

      - name: Upload release artifact
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/${{ matrix.target }}/release/fswatcher-${{ matrix.target }}.tar.gz
            target/${{ matrix.target }}/release/fswatcher-${{ matrix.target }}.sha256sum
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
